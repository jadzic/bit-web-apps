"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _child_process = require("child_process");

var _ = require(".");

/**
 * Copy text to the clipboard using a platform's native command.
 * @param  text  The text to copy.
 * @returns      A promise that resolves with the text to copy.
 */
var copyToClipboard = function copyToClipboard(text) {
  return new Promise(function (resolve, reject) {
    try {
      var platform = (0, _.getPlatform)();

      if ((0, _.isSupportedPlatform)(platform) === false) {
        throw new Error("Copy is not supported for ".concat(platform));
      }

      var command = "echo \"".concat(text, "\" | ").concat((0, _.getCopyCommand)(platform));
      (0, _child_process.exec)(command, function (error, stdout, stderr) {
        /* istanbul ignore if */
        if (error) {
          return reject(error);
        }

        if (stderr) {
          return reject(new Error(stderr));
        }

        return resolve(text);
      });
    } catch (error) {
      return reject(error);
    }
  });
};

var _default = copyToClipboard;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2NvcHlUb0NsaXBib2FyZC50cyJdLCJuYW1lcyI6WyJjb3B5VG9DbGlwYm9hcmQiLCJ0ZXh0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJwbGF0Zm9ybSIsIkVycm9yIiwiY29tbWFuZCIsImVycm9yIiwic3Rkb3V0Iiwic3RkZXJyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7Ozs7O0FBS0EsSUFBTUEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDQyxJQUFELEVBQW1DO0FBQ3pELFNBQU8sSUFBSUMsT0FBSixDQUNMLFVBQUNDLE9BQUQsRUFBa0NDLE1BQWxDLEVBQXFFO0FBQ25FLFFBQUk7QUFDRixVQUFNQyxRQUFRLEdBQUcsb0JBQWpCOztBQUNBLFVBQUksMkJBQW9CQSxRQUFwQixNQUFrQyxLQUF0QyxFQUE2QztBQUMzQyxjQUFNLElBQUlDLEtBQUoscUNBQXVDRCxRQUF2QyxFQUFOO0FBQ0Q7O0FBQ0QsVUFBTUUsT0FBTyxvQkFBWU4sSUFBWixrQkFBdUIsc0JBQWVJLFFBQWYsQ0FBdkIsQ0FBYjtBQUNBLCtCQUFLRSxPQUFMLEVBQWMsVUFBQ0MsS0FBRCxFQUFRQyxNQUFSLEVBQWdCQyxNQUFoQixFQUEyQjtBQUN2QztBQUNBLFlBQUlGLEtBQUosRUFBVztBQUNULGlCQUFPSixNQUFNLENBQUNJLEtBQUQsQ0FBYjtBQUNEOztBQUVELFlBQUlFLE1BQUosRUFBWTtBQUNWLGlCQUFPTixNQUFNLENBQUMsSUFBSUUsS0FBSixDQUFVSSxNQUFWLENBQUQsQ0FBYjtBQUNEOztBQUVELGVBQU9QLE9BQU8sQ0FBQ0YsSUFBRCxDQUFkO0FBQ0QsT0FYRDtBQVlELEtBbEJELENBa0JFLE9BQU9PLEtBQVAsRUFBYztBQUNkLGFBQU9KLE1BQU0sQ0FBQ0ksS0FBRCxDQUFiO0FBQ0Q7QUFDRixHQXZCSSxDQUFQO0FBeUJELENBMUJEOztlQTRCZVIsZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4ZWMgfSBmcm9tIFwiY2hpbGRfcHJvY2Vzc1wiO1xyXG5pbXBvcnQgeyBnZXRDb3B5Q29tbWFuZCwgZ2V0UGxhdGZvcm0sIGlzU3VwcG9ydGVkUGxhdGZvcm0gfSBmcm9tIFwiLlwiO1xyXG5cclxuLyoqXHJcbiAqIENvcHkgdGV4dCB0byB0aGUgY2xpcGJvYXJkIHVzaW5nIGEgcGxhdGZvcm0ncyBuYXRpdmUgY29tbWFuZC5cclxuICogQHBhcmFtICB0ZXh0ICBUaGUgdGV4dCB0byBjb3B5LlxyXG4gKiBAcmV0dXJucyAgICAgIEEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdpdGggdGhlIHRleHQgdG8gY29weS5cclxuICovXHJcbmNvbnN0IGNvcHlUb0NsaXBib2FyZCA9ICh0ZXh0OiBzdHJpbmcpOiBQcm9taXNlPHN0cmluZz4gPT4ge1xyXG4gIHJldHVybiBuZXcgUHJvbWlzZShcclxuICAgIChyZXNvbHZlOiAodGV4dDogc3RyaW5nKSA9PiB2b2lkLCByZWplY3Q6IChlcnJvcjogRXJyb3IpID0+IHZvaWQpID0+IHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBwbGF0Zm9ybSA9IGdldFBsYXRmb3JtKCk7XHJcbiAgICAgICAgaWYgKGlzU3VwcG9ydGVkUGxhdGZvcm0ocGxhdGZvcm0pID09PSBmYWxzZSkge1xyXG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDb3B5IGlzIG5vdCBzdXBwb3J0ZWQgZm9yICR7cGxhdGZvcm19YCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IGNvbW1hbmQgPSBgZWNobyBcIiR7dGV4dH1cIiB8ICR7Z2V0Q29weUNvbW1hbmQocGxhdGZvcm0pfWA7XHJcbiAgICAgICAgZXhlYyhjb21tYW5kLCAoZXJyb3IsIHN0ZG91dCwgc3RkZXJyKSA9PiB7XHJcbiAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgKi9cclxuICAgICAgICAgIGlmIChlcnJvcikge1xyXG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0KGVycm9yKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBpZiAoc3RkZXJyKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZWplY3QobmV3IEVycm9yKHN0ZGVycikpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHJldHVybiByZXNvbHZlKHRleHQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiByZWplY3QoZXJyb3IpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb3B5VG9DbGlwYm9hcmQ7XHJcbiJdfQ==